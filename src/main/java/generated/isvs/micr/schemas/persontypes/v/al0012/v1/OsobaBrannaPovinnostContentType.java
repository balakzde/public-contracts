//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.23 at 01:46:39 AM CET 
//


package generated.isvs.micr.schemas.persontypes.v.al0012.v1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;



@XmlType(name = "OsobaBrannaPovinnostContentType", namespace = "urn:cz:isvs:micr:schemas:PersonTypes:v:AL0012:v1")
@XmlEnum
public enum OsobaBrannaPovinnostContentType {

    @XmlEnumValue("neuvedeno")
    NEUVEDENO("neuvedeno"),
    @XmlEnumValue("st\u00e1tn\u00ed ob\u010dan \u010cesk\u00e9 republiky, kter\u00e9mu brann\u00e1 povinnost nevznikla")
    STATNI_OBCAN_CESKE_REPUBLIKY_KTEREMU_BRANNA_POVINNOST_NEVZNIKLA("st\u00e1tn\u00ed ob\u010dan \u010cesk\u00e9 republiky, kter\u00e9mu brann\u00e1 povinnost nevznikla"),
    @XmlEnumValue("st\u00e1tn\u00ed ob\u010dan \u010cesk\u00e9 republiky, kter\u00e9mu brann\u00e1 povinnost zanikla")
    STATNI_OBCAN_CESKE_REPUBLIKY_KTEREMU_BRANNA_POVINNOST_ZANIKLA("st\u00e1tn\u00ed ob\u010dan \u010cesk\u00e9 republiky, kter\u00e9mu brann\u00e1 povinnost zanikla"),
    @XmlEnumValue("st\u00e1tn\u00ed ob\u010dan \u010cesk\u00e9 republiky, kter\u00fd podl\u00e9h\u00e1 brann\u00e9 povinnosti")
    STATNI_OBCAN_CESKE_REPUBLIKY_KTERY_PODLEHA_BRANNE_POVINNOSTI("st\u00e1tn\u00ed ob\u010dan \u010cesk\u00e9 republiky, kter\u00fd podl\u00e9h\u00e1 brann\u00e9 povinnosti"),
    @XmlEnumValue("voj\u00e1k v z\u00e1loze")
    VOJAK_V_ZALOZE("voj\u00e1k v z\u00e1loze");
    private final String value;

    OsobaBrannaPovinnostContentType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static OsobaBrannaPovinnostContentType fromValue(String v) {
        for (OsobaBrannaPovinnostContentType c: OsobaBrannaPovinnostContentType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
